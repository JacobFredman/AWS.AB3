Resources:
  CryptoDB:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: 'cryptoTable'
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
  
  GetBaseCryptoDataFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: crypto-data-general
        S3Key: GetBaseCrypoDataLambda.zip
      Handler: "code.xx"
      Runtime: "python3.8"
      Timeout: 30
      MemorySize: 128
      Role: !GetAtt MyLambdaRole.Arn
        
  MyLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - "dynamodb:PutItem"
                Effect: "Allow"
                Resource: !GetAtt CryptoDB.Arn
            Version: "2012-10-17"
          PolicyName: "MyLambdaDynamoDBPolicy"
          
Outputs:
  GetBaseCryptoDataFunctionArn:
    Value: !GetAtt GetBaseCryptoDataFunction.Arn
    Description: "ARN of the GetBaseCryptoData Lambda function"
    
  CryptoDBArn:
    Value: !GetAtt CryptoDB.Arn
    Description: "ARN of the DynamoDB table"
